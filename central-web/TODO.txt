x	- develop in C++ for RPi:
http://www.raspberry-projects.com/pi/programming-in-c/compilers-and-ides/netbeans-windows/installing-netbeans-for-c-remote-development-on-a-raspberry-pi

	- fix sourcetree/git setup on Windows to keep chmod +x on shell script(s)
	
1h	- improve global system launch (for DEBUG first, then for PROD TBD)
		- one shell script to launch rfmanager and then python
		- also allow proper exit of python flask application (with some signal)
			http://flask.pocoo.org/snippets/67/

	- port Arduino projects to netbeans
		- arduino build on netbeans
x			- install Arduino 1.6.6 (from ZIP)
x			- setup netbeans build tools 
				http://mattzz.no-ip.org/wiki/Projects/ArduinoAndNetbeans
x			- ensure to use the correct make (not available in Arduino), I used MinGW
x		- ActivationModule port
x		- Copy arduino_cosa_lib project to working dir
		- test latest cosa in new branch
x			- clone cosa at same level as alarm-system
x			- setup new arduino_cosa_lib project
x				- ensure all cosa sublibs are included: 
x			- setup tools configuration (2 UNO different configs)
x			- check build
x			- add 2 ATmega328p configs
x			- update ActivationModule to use new library (new branch)
			- rename RTCAdapter.hh to auto_RTT.hh
			- refactor MatrixKeypad to isolate non-generic stuff to its own .cpp
				- some kind of Impl class without templates
			- push branch and merge
			- remove old cosa library?
		- document (README.md?) netbeans configuration
			- tools configuration
			- makefile stuff
		- factor out network stuff (constants and a few others) to external library
		  for reuse in future modules
	
	- compute consumption
		LED 500us every 16ms
		scan keypad once every 64ms
		ping (NRF24L01) every 5 seconds
		voltage measure (ADC, NRF24L01) every 3600 seconds
		remaining time: SLEEP_MODE_PWR_DOWN

		
	- try python build on netbeans?
	- abandon virtualenv on RPi (for prod only, not for dev)?

	- review PCB design of keypad module
		- no debug LED
		- review green LED resistor value (0 Ohm?)
		- use serial number component instead of DIP switches to identify sensor
			- first check Cosa support
			- then define protocol for:
				- devices configuration
				(need to get ID from device the first time and store to EEPROM)
				- devices registration
		- once device registration protocol is defined, think about potential extensions:
			- define also NETWORK ID
			- SERVER ID...
			
30'	- if "current" config is changed, previous config must be forced inactive if needed
		- maybe need confirm message?
30'	- configuration changes of an active config should be limited
		- or there should be mechanisms to propagate change to MonitoringManager
		(because devices are deep copies of config devices, hence are not up-to-date)
		
1h	- review FIXME
1h	- review TODO
		
	- consider using marshmallow instead of flask restful marshalling?
	- consider replacing webargs with just marshmallow then?
	- remove flask-restful in the end?
	- improve webargs to support bundle_errors if keep webargs
		
2h	- improve component loading:
		- factor GlobalViewModel and ComponentLoader into viewmodel-utils.js
		- VM should just specify the feature name
		- component binding should use feature name + type (dialog, content...)
		- make GlobalVM automatically find out all component elements in DOM
			- use class for real DOM elements, but how to deal with <!-- ko ... -->
		- remove console.log()
2h	- javascript: make it more modular?
		- investigate requirejs
		- how to create "subclasses"?

	- bug: when token expired (401), login dialog does not always appear automatically...
		- use case: signin, go to monitor, stop server for 10' (token duration), restart,
		all monitor status request get 401 but nothing else happens...
	
	- open points/bugs:
		- bugs on "required" on server side: it is currently possible to create a user with empty name/fullname/password!
			-> this is due to not submitting the form!
		- all REST resources: improve webargs checks by providing dedicated checks
		
	- open questions:
		- validation? suggested to use jQuery validation: what's that?
		
	- security:
		- check prevention against SVG exploits
		
	- improve DB model to:
		- have several lock codes for a config, each with an associated message
		  (typically: owner)
2h	- add correct SQL exception handling in all REST calls POST/PUT
		- unique key => special warning message
		- reference key => other special warning
	
30'	- improve CSS for every screen; check padding/margins in particular
2h	- review labels/titles everywhere and review look overall

1h+	- improve function to cleanup alert history:
		- for a given config
		- for a given period of time
		- for a given level of alert
		
15'	- check no possible direct access to some routes
30'	- force password change (when password empty)

	- monitoring:
		- [LATER] filter alerts stored upon events when status is unlocked
			- eg presence detected
		
1h	- infer on i18n

	- add email?
	
