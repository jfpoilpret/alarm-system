	- update flask-bootstrap dependency whenever a new release is rolled out,
	including the fix for bug: https://github.com/mbr/flask-bootstrap/issues/90
	
	- Major refactoring:
		- AJAX+RESTful webapp (but not exactly single page: one page per main menu in fact)
x		- Flask-RESTful extension with JSON marshallers
x		- knockout js for data binding and actions (MVVM)

		- migration:
8h			- configurations REST
8h			- configurations UI
			
8h			- monitoring REST
8h			- monitoring UI
			
4h			- cleanup wep site part:
				- remove all forms (except login)
				- remove all routes that are superseded by API
				- only 2 blueprints: API Vs. Web
			
8h			- security (login, token)
				- login must enable both REST services and Web pages serving!
				- use time-limited tokens (is it enough for CSRF protection?)
				- check if login can be done with knockout also (remove WTF altogether)
	
		- open points/bugs:
			- link profile ViewModel to UsersViewModel somehow
			- bind navbar to profile ViewModel
			- bugs on "required" on server side: it is currently possible to create a user with empty name/fullname/password!
				-> this is due to not submitting the form!
		
	- open questions:
		- validation? suggested to use jQuery validation: what's that?
		
	- security:
		- check prevention against SVG exploits
		
	- study JavaScript and refactor as much as possible
	- remove useless libs as much as possible!
	
30'	- if "current" config is changed, previous config must be forced inactive if needed
		- maybe need confirm message?
30'	- configuration changes of an active config should be limited
		- or there should be mechanisms to propagate change to MonitoringManager
		(because devices are deep copies of config devices, hence are not up-to-date)
		
30'	- review all .js files: lowercase filename only!
15'	- review all .py headers (encoding!)
15'	- ensure all classes use new-style classes (subclass object)
1h	- rename "private" methods with leading underscore (convention)
30'	- review all FIXME/TODO

1h	- monitoring UI bug
		- Clear History often leads to CSRF token error???...
30'	- monitoring UI:
		- improve error display in AJAX if possible 
		(avoid flash messages and replace with <p class="help-block">xxx</p>)
		not sure it is OK with inline forms?
		- improve alerts tab when not active, by displaying badge with number of new alerts
		(will require special AJAX code to get the number of new alerts only)
	
	- improve DB model to:
		- have several codes for a config, each with an associated message
		  (typically: owner)
1h	- review models to ensure completeness of relationships and efficiency; in particular
	  try to limit manual queries performed in code if not needed!
		(search for .query.)
2h	- add correct SQL exception handling in all routes
		- unique key => special warning message
		- reference key => other special warning
	
1h	- refactor CSS files
		one css per module, with same name as module or one unique name, the same across all modules...)
		remove obsolete styles (some selectors don't exist any more after refactoring...)
30'	- improve CSS files for every screen; check padding/margins in particular
2h	- review labels/titles everywhere and review look overall
1h	- ensure focus is set on first field of dialog

1h+	- improve function to cleanup alert history:
		- for a given config
		- for a given period of time
		- for a given level of alert
		
15'	- check no possible direct access to some routes
30'	- force password change (when password empty)

	- monitoring:
		- [LATER] filter alerts stored upon events when status is unlocked
			- eg presence detected
		
1h	- infer on i18n

	- add email?
	
2h	- add NRF24 and scanning thread
	
